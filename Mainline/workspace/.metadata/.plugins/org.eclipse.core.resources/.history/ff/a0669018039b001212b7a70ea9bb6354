package org.example.opengl;

import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import android.os.Environment;
import android.util.Log;

public class AnimationFactory {
	
	private static final int X_LOC = 0;
	
	String dir;
	
	public AnimationFactory(String dir){
		this.dir = dir;
	}
	
	public Animation loadAnimation(String fileName) throws ParserConfigurationException, IOException, SAXException{

			//File is .dae file (COLLADA)
			if(fileName.contains(".dae")){
				
				DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance();
				fac.setNamespaceAware(false);
				fac.setValidating(false);
				fac.setFeature("http://xml.org/sax/features/namespaces", false);
				fac.setFeature("http://xml.org/sax/features/validation", false);
				DocumentBuilder builder = fac.newDocumentBuilder();
				File myFile = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + dir + "/" + fileName);
				String test = Environment.getExternalStorageDirectory().getAbsolutePath() + dir + "/" + fileName;
				Document doc = builder.parse(myFile);
				NodeList nl = doc.getElementsByTagName("animation");
					for(int i = 0; i < nl.getLength(); i++){
						Element el = (Element) nl.item(i);
						if(el.hasAttribute("id"))
							if(el.getAttribute("id").contains("location_X"))
								parseLocation(el, X_LOC);
					}
			}
		
		return null;
	}
	
	public void parseLocation(Element el, int type){
		NodeList data = el.getChildNodes();
		for(int i = 0; i < data.getLength(); i++){
		//	if(data.item(i).getLocalName().contains("source")){
//				Element partial = (Element) data.item(i);
//				partial.cloneNode(true);
		//	}
		}
	}
}
